---
- name: set timezone
  command: timedatectl set-timezone America/New_York

- name: check if swap is already on
  command: swapon -s
  register: result

# - debug: var=result

- name: do the swap file if swap has not been set
  include: swapon.yml
  when: result.stdout == ""

- name: set hostname variable
  command: hostname
  register: hostname_var

- debug: var=hostname_var

# - name: mount disks prod
#   mount:
#     name: "{{ item.name }}"
#     src: "{{ item.src }}"
#     fstype: "{{ item.fs }}"
#     # change to 'mounted' to auto mount
#     state: mounted
#   with_items:
#     - { name: /opt, src: UUID=70717648-9c5b-41f0-8609-136ad6bcf192, fs: ext4, opts: defaults,_netdev,nofail, dump: 0, passno: 2}
#   when: hostname_var.stdout == prod_hostname

# - name: mount disks dev
#   mount:
#     name: "{{ item.name }}"
#     src: "{{ item.src }}"
#     fstype: "{{ item.fs }}"
#     # change to 'mounted' to auto mount
#     state: mounted
#   with_items:
#     - { name: /opt, src: UUID=70717648-9c5b-41f0-8609-136ad6bcf192, fs: ext4, opts: defaults,_netdev,nofail, dump: 0, passno: 2}
#   when: hostname_var.stdout == dev_hostname

- name: copy docker-compose.yml into position
  copy:
    src: "opt/docker-compose.yml"
    dest: "/opt/docker-compose.yml"
    owner: ubuntu
    group: ubuntu
    mode: 0775
  when: hostname_var.stdout == prod_hostname

- name: copy docker-compose_dev.yml into position
  copy:
    src: "opt/docker-compose_dev.yml"
    dest: "/opt/docker-compose.yml"
    owner: ubuntu
    group: ubuntu
    mode: 0775
  when: hostname_var.stdout == dev_hostname


- name: create appdata - ubuntu user full permissions
  file:
    path: /opt/appdata
    state: directory
    mode: 0777
    owner: 1000
    group: 1000
   

- name: create directories for docker - bin user (2)
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 2
    group: 2
  with_items:
    - /opt/appdata/bitbucket
    - /opt/appdata/confluence

- name: create directories for docker - daemon user (1)
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 1
    group: 1
  with_items:
    - /opt/appdata/jira
        
- name: create directories for docker - ubuntu user (1000), with staff group (50)
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 1000
    group: 50
  with_items:
    - /opt/appdata/pgadmin


- name: create directories for docker - ubuntu user (1000) and group (1000)
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: 1000
    group: 1000
  with_items:
    - /opt/appdata/portainer
    - /opt/appdata/traefik
    - /opt/appdata/traefik/certs


- name: create directories for docker - 999
  file:
    path: "{{ item }}"
    state: directory
    mode: 0700
    owner: 999
    group: 999
  with_items:
    - /opt/appdata/postgres

- name: copy certs into place
  copy:
    src: "{{ item }}"
    dest: "/opt/appdata/traefik/certs/"
    owner: ubuntu
    group: ubuntu
    mode: 0775
  with_items:
    - "certs/651f1c6989eb5f4.crt"
    - "certs/tekstream.com.key"
  when: hostname_var.stdout == prod_hostname